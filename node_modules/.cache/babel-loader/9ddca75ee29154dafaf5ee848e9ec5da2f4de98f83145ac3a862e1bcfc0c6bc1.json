{"ast":null,"code":"var _jsxFileName = \"D:\\\\python all collection\\\\roadmap-assistant\\\\src\\\\components\\\\Roadmap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport explanations from '../data/explanations.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Roadmap({\n  roadmap\n}) {\n  _s();\n  const [completed, setCompleted] = useState([]);\n  const [showExplanation, setShowExplanation] = useState({});\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"completedTasks\")) || [];\n    setCompleted(saved);\n  }, [roadmap]);\n  const toggleComplete = item => {\n    let updated;\n    if (completed.includes(item)) {\n      updated = completed.filter(i => i !== item);\n    } else {\n      updated = [...completed, item];\n    }\n    setCompleted(updated);\n    localStorage.setItem(\"completedTasks\", JSON.stringify(updated));\n  };\n  const toggleExplanation = item => {\n    setShowExplanation(prev => ({\n      ...prev,\n      [item]: !prev[item]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Personalized Roadmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: roadmap.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: completed.includes(item),\n          onChange: () => toggleComplete(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), ' ', item, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleExplanation(item),\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"\\uD83D\\uDD0D Explain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), showExplanation[item] && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '5px',\n            color: 'gray'\n          },\n          children: explanations[item] || \"Explanation not available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Roadmap, \"lop5v3PkQncY5tcy2Dkj1ZXGLNM=\");\n_c = Roadmap;\nexport default Roadmap;\nvar _c;\n$RefreshReg$(_c, \"Roadmap\");","map":{"version":3,"names":["React","useState","useEffect","explanations","jsxDEV","_jsxDEV","Roadmap","roadmap","_s","completed","setCompleted","showExplanation","setShowExplanation","saved","JSON","parse","localStorage","getItem","toggleComplete","item","updated","includes","filter","i","setItem","stringify","toggleExplanation","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","checked","onChange","onClick","style","marginLeft","marginTop","color","_c","$RefreshReg$"],"sources":["D:/python all collection/roadmap-assistant/src/components/Roadmap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport explanations from '../data/explanations.json';\r\n\r\nfunction Roadmap({ roadmap }) {\r\n  const [completed, setCompleted] = useState([]);\r\n  const [showExplanation, setShowExplanation] = useState({});\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem(\"completedTasks\")) || [];\r\n    setCompleted(saved);\r\n  }, [roadmap]);\r\n\r\n  const toggleComplete = (item) => {\r\n    let updated;\r\n    if (completed.includes(item)) {\r\n      updated = completed.filter(i => i !== item);\r\n    } else {\r\n      updated = [...completed, item];\r\n    }\r\n    setCompleted(updated);\r\n    localStorage.setItem(\"completedTasks\", JSON.stringify(updated));\r\n  };\r\n\r\n  const toggleExplanation = (item) => {\r\n    setShowExplanation((prev) => ({\r\n      ...prev,\r\n      [item]: !prev[item]\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Personalized Roadmap</h2>\r\n      <ul>\r\n        {roadmap.map((item, index) => (\r\n          <li key={index}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={completed.includes(item)}\r\n              onChange={() => toggleComplete(item)}\r\n            />\r\n            {' '}\r\n            {item}\r\n            <button onClick={() => toggleExplanation(item)} style={{ marginLeft: '10px' }}>\r\n              üîç Explain\r\n            </button>\r\n            {showExplanation[item] && (\r\n              <p style={{ marginTop: '5px', color: 'gray' }}>{explanations[item] || \"Explanation not available.\"}</p>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Roadmap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}